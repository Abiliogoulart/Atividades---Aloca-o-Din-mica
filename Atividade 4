#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// Função para alocar dinamicamente a string
char* aloc_string(int tamanho) {
    char* str = (char*) malloc((tamanho + 1) * sizeof(char)); // +1 para o caractere nulo '\0'
    if (str == NULL) {
        printf("Erro ao alocar memoria para a string!\n");
        exit(1);
    }
    return str;
}

int main() {
    int tamanho;
    char *string_original;

    // Pede ao usuário o tamanho da string
    printf("Digite o tamanho da string: ");
    scanf("%d", &tamanho);
    
    // Limpa o buffer do teclado
    getchar();

    // Chama a função para alocar a string dinamicamente
    string_original = aloc_string(tamanho);

    // Pede ao usuário para informar o conteúdo da string
    printf("Digite o conteudo da string (max %d caracteres): ", tamanho);
    fgets(string_original, tamanho + 1, stdin);

    // Remove o caractere de nova linha, se presente
    if (string_original[strlen(string_original) - 1] == '\n') {
        string_original[strlen(string_original) - 1] = '\0';
    }

    // Imprime a string sem suas vogais
    printf("String sem vogais: ");
    for (int i = 0; i < strlen(string_original); i++) {
        char c = string_original[i];
        if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' &&
            c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U') {
            printf("%c", c);
        }
    }
    printf("\n");

    // Libera a memória alocada
    free(string_original);

    return 0;
}
